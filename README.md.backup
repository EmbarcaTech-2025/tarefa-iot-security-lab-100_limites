[![Review Assignment Due Date](https://classroom.github.com/assets/deadline-readme-button-22041afd0340ce965d47ae6ef1cefeee28c7c493a6346c4f15d667ab976d596c.svg)](https://classroom.github.com/a/G8V_0Zaq)

# Tarefa: IoT Security Lab - EmbarcaTech 2025

Autores: 

> **Jo√£o Vitor Silva do Espirito Santo**

> **Yan**

Curso: Resid√™ncia Tecnol√≥gica em Sistemas Embarcados

Institui√ß√£o: EmbarcaTech - HBr

Bras√≠lia, 26 de Maio de 2025

## Comunica√ß√£o MQTT b√°sica entre duas raspberry pi pico W

Esse projeto visa a aplica√ß√£o da comunica√ß√£o mqtt entre duas BitDogLabs onde uma trabalha como publisher no servidor mqtt e a outra como subscriber.

O c√≥digo no reposit√≥rio compila ambos programas para serem embarcados na placa. Para mudar qual ser√° embarcado na placa basta editar o nome do projeto no arquivo CMakeList.txt na linha project(....)

### Excu√ß√£o

1. Abra o projeto no VS Code com ambiente configurado para Raspberry Pi Pico (CMake + compilador ARM)
2. Editar os par√¢metros necess√°rios para a conex√£o com o Broker:
> #define WIFI_SSID "Sua_Rede_wifi"

>#define WIFI_PASSWD "Senha_rede"

>#define BROKER_IP "192.168.43.121" //IP do broker na rede local
2. Compile o projeto (Ctrl+Shift+B no VS Code ou via terminal com cmake e make)
3. Conecte a BitDogLab via USB no modo de boot (pressione BOOTSEL enquanto conecta)
4. Copie o arquivo .uf2 gerado para a unidade RPI-RP2
5. A placa reiniciar√° automaticamente e iniciar√° a conex√£o

Para visualizar a comunica√ß√£o MQTT h√° duas op√ß√µes para isso.

1. Usar a interface do VScode para usar a comunica√ß√£o serial, onde o c√≥digo far√° a rp escrever o estado da conex√£o wifi, mqtt e as publica√ß√µes feitas ou observadas.
2. Usar o mosquito_sub com os par√¢metros de usu√°rio e senha para ver as publica√ß√µes. PS: as publica√ß√µes vista com ele estar√£o criptografadas.






## üìú Licen√ßa
GNU GPL-3.0.
